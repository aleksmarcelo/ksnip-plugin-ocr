name: windows

on:
  push:
    branches: [ master ]
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up build variables
        run: bash ./.github/scripts/setup_build_variables.sh

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          host: 'windows'
          install-deps: 'true'
          arch: 'win64_msvc2019_64'

      - name: Set up nmake
        uses: ilammy/msvc-dev-cmd@v1

#      - name: Set up SW
#        run: |
#          curl -L "https://software-network.org/client/sw-master-windows-client.zip" --output sw.zip
#          7z x sw.zip -o"sw"
#          cd sw
#          ./sw.exe setup
#
#      - name: Set up SW path
#        run: echo "D:\a\ksnip-plugin-ocr\ksnip-plugin-ocr\sw" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build and install zlib
        run: |
          curl -sSL -o zlib1211.zip https://zlib.net/zlib1211.zip
          unzip.exe zlib1211.zip
          cd zlib-1.2.11
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install libpng
        run: |
          curl -sSL -o lpng1637.zip https://download.sourceforge.net/libpng/lpng1637.zip
          unzip.exe lpng1637.zip
          cd lpng1637
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install webp
        run: |
          git clone --depth 1 https://github.com/webmproject/libwebp.git
          cd libwebp
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install giflib
        run: |
          curl -sSL -o giflib-master.zip https://codeload.github.com/xbmc/giflib/zip/master
          unzip giflib-master.zip
          cd giflib-master
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install libjpeg
        run: |
          git clone --depth 1 https://github.com/libjpeg-turbo/libjpeg-turbo.git
          cd libjpeg-turbo
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install openjpeg
        run: |
          git clone --depth 1 https://github.com/uclouvain/openjpeg.git
          cd openjpeg
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install jbigkit
        run: |
          git clone --depth 1 https://github.com/zdenop/jbigkit
          cd jbigkit
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install zstd
        run: |
          git clone --depth 1 https://github.com/facebook/zstd.git
          cd zstd
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install libtiff
        run: |
          git clone --depth 1 https://gitlab.com/libtiff/libtiff
          cd libtiff
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake
          nmake install

      - name: Build and install leptonica
        run: |
          git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
          cd leptonica
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBUILD_PROG=OFF -DSW_BUILD=OFF
          nmake
          nmake install
          ln -s $env:INSTALL_PREFIX/lib/leptonica*.lib $env:INSTALL_PREFIX/lib/leptonica.lib

      - name: Build and install tessarect
        run: |
          git clone --depth 1 https://github.com/tesseract-ocr/tesseract.git
          cd tesseract
          mkdir build
          cd build && cmake .. -G"NMake Makefiles" -DCMAKE_INSTALL_PREFIX="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBUILD_TRAINING_TOOLS=OFF -DOPENMP_BUILD=OFF -DSW_BUILD=OFF
          nmake
          nmake install
          ln -s $env:INSTALL_PREFIX/lib/tesseract*.lib $env:INSTALL_PREFIX/lib/tesseract.lib

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G"NMake Makefiles" -DCMAKE_PREFIX_PATH="$env:INSTALL_PREFIX" -DCMAKE_BUILD_TYPE=Release
          nmake